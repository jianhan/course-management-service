// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/course/course.proto

/*
Package course is a generated protocol buffer package.

It is generated from these files:
	proto/course/course.proto

It has these top-level messages:
	Course
	Courses
	Result
	UpsertCoursesRequest
	UpsertCoursesResponse
	GetCoursesByFiltersResponse
	FilterSet
	BoolField
	GetCoursesByFiltersRequest
*/
package course

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Course struct {
	// @inject_tag: bson:"_id,omitempty"
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" bson:"_id,omitempty"`
	// @inject_tag: validate:"required"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" validate:"required"`
	Slug string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty"`
	// @inject_tag: validate:"required"
	Description string                     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty" validate:"required"`
	Visible     bool                       `protobuf:"varint,5,opt,name=visible" json:"visible,omitempty"`
	Start       *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=start" json:"start,omitempty"`
	End         *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=end" json:"end,omitempty"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
}

func (m *Course) Reset()                    { *m = Course{} }
func (m *Course) String() string            { return proto.CompactTextString(m) }
func (*Course) ProtoMessage()               {}
func (*Course) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Course) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Course) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Course) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Course) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Course) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

func (m *Course) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *Course) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *Course) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Course) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type Courses struct {
	Courses []*Course `protobuf:"bytes,1,rep,name=courses" json:"courses,omitempty"`
}

func (m *Courses) Reset()                    { *m = Courses{} }
func (m *Courses) String() string            { return proto.CompactTextString(m) }
func (*Courses) ProtoMessage()               {}
func (*Courses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Courses) GetCourses() []*Course {
	if m != nil {
		return m.Courses
	}
	return nil
}

type Result struct {
	RowsEffected uint64 `protobuf:"varint,1,opt,name=rows_effected,json=rowsEffected" json:"rows_effected,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Result) GetRowsEffected() uint64 {
	if m != nil {
		return m.RowsEffected
	}
	return 0
}

type UpsertCoursesRequest struct {
	Courses []*Course `protobuf:"bytes,1,rep,name=courses" json:"courses,omitempty"`
}

func (m *UpsertCoursesRequest) Reset()                    { *m = UpsertCoursesRequest{} }
func (m *UpsertCoursesRequest) String() string            { return proto.CompactTextString(m) }
func (*UpsertCoursesRequest) ProtoMessage()               {}
func (*UpsertCoursesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpsertCoursesRequest) GetCourses() []*Course {
	if m != nil {
		return m.Courses
	}
	return nil
}

type UpsertCoursesResponse struct {
	Updated  uint32 `protobuf:"varint,1,opt,name=updated" json:"updated,omitempty"`
	Inserted uint32 `protobuf:"varint,2,opt,name=inserted" json:"inserted,omitempty"`
}

func (m *UpsertCoursesResponse) Reset()                    { *m = UpsertCoursesResponse{} }
func (m *UpsertCoursesResponse) String() string            { return proto.CompactTextString(m) }
func (*UpsertCoursesResponse) ProtoMessage()               {}
func (*UpsertCoursesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpsertCoursesResponse) GetUpdated() uint32 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *UpsertCoursesResponse) GetInserted() uint32 {
	if m != nil {
		return m.Inserted
	}
	return 0
}

type GetCoursesByFiltersResponse struct {
	Courses []*Course `protobuf:"bytes,1,rep,name=courses" json:"courses,omitempty"`
}

func (m *GetCoursesByFiltersResponse) Reset()                    { *m = GetCoursesByFiltersResponse{} }
func (m *GetCoursesByFiltersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetCoursesByFiltersResponse) ProtoMessage()               {}
func (*GetCoursesByFiltersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetCoursesByFiltersResponse) GetCourses() []*Course {
	if m != nil {
		return m.Courses
	}
	return nil
}

type FilterSet struct {
	Ids        []string                   `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	TextSearch string                     `protobuf:"bytes,2,opt,name=text_search,json=textSearch" json:"text_search,omitempty"`
	Names      []string                   `protobuf:"bytes,3,rep,name=names" json:"names,omitempty"`
	Slugs      []string                   `protobuf:"bytes,4,rep,name=slugs" json:"slugs,omitempty"`
	Start      *google_protobuf.Timestamp `protobuf:"bytes,5,opt,name=start" json:"start,omitempty"`
	End        *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=end" json:"end,omitempty"`
	Visible    *BoolField                 `protobuf:"bytes,7,opt,name=visible" json:"visible,omitempty"`
}

func (m *FilterSet) Reset()                    { *m = FilterSet{} }
func (m *FilterSet) String() string            { return proto.CompactTextString(m) }
func (*FilterSet) ProtoMessage()               {}
func (*FilterSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FilterSet) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *FilterSet) GetTextSearch() string {
	if m != nil {
		return m.TextSearch
	}
	return ""
}

func (m *FilterSet) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *FilterSet) GetSlugs() []string {
	if m != nil {
		return m.Slugs
	}
	return nil
}

func (m *FilterSet) GetStart() *google_protobuf.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *FilterSet) GetEnd() *google_protobuf.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

func (m *FilterSet) GetVisible() *BoolField {
	if m != nil {
		return m.Visible
	}
	return nil
}

type BoolField struct {
	Value  bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Ignore bool `protobuf:"varint,2,opt,name=ignore" json:"ignore,omitempty"`
}

func (m *BoolField) Reset()                    { *m = BoolField{} }
func (m *BoolField) String() string            { return proto.CompactTextString(m) }
func (*BoolField) ProtoMessage()               {}
func (*BoolField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BoolField) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func (m *BoolField) GetIgnore() bool {
	if m != nil {
		return m.Ignore
	}
	return false
}

type GetCoursesByFiltersRequest struct {
	FilterSet *FilterSet `protobuf:"bytes,1,opt,name=filter_set,json=filterSet" json:"filter_set,omitempty"`
}

func (m *GetCoursesByFiltersRequest) Reset()                    { *m = GetCoursesByFiltersRequest{} }
func (m *GetCoursesByFiltersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCoursesByFiltersRequest) ProtoMessage()               {}
func (*GetCoursesByFiltersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetCoursesByFiltersRequest) GetFilterSet() *FilterSet {
	if m != nil {
		return m.FilterSet
	}
	return nil
}

func init() {
	proto.RegisterType((*Course)(nil), "go_micro_srv_course.Course")
	proto.RegisterType((*Courses)(nil), "go_micro_srv_course.Courses")
	proto.RegisterType((*Result)(nil), "go_micro_srv_course.Result")
	proto.RegisterType((*UpsertCoursesRequest)(nil), "go_micro_srv_course.UpsertCoursesRequest")
	proto.RegisterType((*UpsertCoursesResponse)(nil), "go_micro_srv_course.UpsertCoursesResponse")
	proto.RegisterType((*GetCoursesByFiltersResponse)(nil), "go_micro_srv_course.GetCoursesByFiltersResponse")
	proto.RegisterType((*FilterSet)(nil), "go_micro_srv_course.FilterSet")
	proto.RegisterType((*BoolField)(nil), "go_micro_srv_course.BoolField")
	proto.RegisterType((*GetCoursesByFiltersRequest)(nil), "go_micro_srv_course.GetCoursesByFiltersRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for CourseManager service

type CourseManagerClient interface {
	UpsertCourses(ctx context.Context, in *UpsertCoursesRequest, opts ...client.CallOption) (*UpsertCoursesResponse, error)
	GetCoursesByFilters(ctx context.Context, in *GetCoursesByFiltersRequest, opts ...client.CallOption) (*GetCoursesByFiltersResponse, error)
}

type courseManagerClient struct {
	c           client.Client
	serviceName string
}

func NewCourseManagerClient(serviceName string, c client.Client) CourseManagerClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go_micro_srv_course"
	}
	return &courseManagerClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *courseManagerClient) UpsertCourses(ctx context.Context, in *UpsertCoursesRequest, opts ...client.CallOption) (*UpsertCoursesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "CourseManager.UpsertCourses", in)
	out := new(UpsertCoursesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *courseManagerClient) GetCoursesByFilters(ctx context.Context, in *GetCoursesByFiltersRequest, opts ...client.CallOption) (*GetCoursesByFiltersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "CourseManager.GetCoursesByFilters", in)
	out := new(GetCoursesByFiltersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CourseManager service

type CourseManagerHandler interface {
	UpsertCourses(context.Context, *UpsertCoursesRequest, *UpsertCoursesResponse) error
	GetCoursesByFilters(context.Context, *GetCoursesByFiltersRequest, *GetCoursesByFiltersResponse) error
}

func RegisterCourseManagerHandler(s server.Server, hdlr CourseManagerHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&CourseManager{hdlr}, opts...))
}

type CourseManager struct {
	CourseManagerHandler
}

func (h *CourseManager) UpsertCourses(ctx context.Context, in *UpsertCoursesRequest, out *UpsertCoursesResponse) error {
	return h.CourseManagerHandler.UpsertCourses(ctx, in, out)
}

func (h *CourseManager) GetCoursesByFilters(ctx context.Context, in *GetCoursesByFiltersRequest, out *GetCoursesByFiltersResponse) error {
	return h.CourseManagerHandler.GetCoursesByFilters(ctx, in, out)
}

func init() { proto.RegisterFile("proto/course/course.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x6e, 0xd4, 0x3c,
	0x14, 0xfd, 0xe6, 0x2f, 0x33, 0xb9, 0xf3, 0x0d, 0x42, 0x6e, 0x41, 0x66, 0x2a, 0xd1, 0x51, 0xd8,
	0x0c, 0x08, 0x32, 0x55, 0x11, 0x12, 0x5d, 0x20, 0xd1, 0x22, 0xca, 0xaa, 0x1b, 0xb7, 0x6c, 0x60,
	0x11, 0xa5, 0xc9, 0x9d, 0xd4, 0x52, 0x26, 0x0e, 0xb6, 0x53, 0x7e, 0xd6, 0x3c, 0x21, 0xef, 0xc2,
	0x1e, 0xd9, 0x4e, 0xa6, 0x80, 0x52, 0x75, 0xe8, 0x2a, 0xbe, 0x27, 0xe7, 0x1e, 0x5f, 0xfb, 0x1c,
	0xc3, 0x83, 0x52, 0x0a, 0x2d, 0x16, 0x89, 0xa8, 0xa4, 0xc2, 0xfa, 0x13, 0x5a, 0x8c, 0x6c, 0x65,
	0x22, 0x5a, 0xf1, 0x44, 0x8a, 0x48, 0xc9, 0xcb, 0xc8, 0xfd, 0x9a, 0xee, 0x66, 0x42, 0x64, 0x39,
	0x2e, 0x2c, 0xe5, 0xbc, 0x5a, 0x2e, 0x34, 0x5f, 0xa1, 0xd2, 0xf1, 0xaa, 0x74, 0x5d, 0xc1, 0x8f,
	0x2e, 0x78, 0x6f, 0x2c, 0x97, 0xdc, 0x81, 0x2e, 0x4f, 0x69, 0x67, 0xd6, 0x99, 0xfb, 0xac, 0xcb,
	0x53, 0x42, 0xa0, 0x5f, 0xc4, 0x2b, 0xa4, 0x5d, 0x8b, 0xd8, 0xb5, 0xc1, 0x54, 0x5e, 0x65, 0xb4,
	0xe7, 0x30, 0xb3, 0x26, 0x33, 0x18, 0xa7, 0xa8, 0x12, 0xc9, 0x4b, 0xcd, 0x45, 0x41, 0xfb, 0xf6,
	0xd7, 0xef, 0x10, 0xa1, 0x30, 0xbc, 0xe4, 0x8a, 0x9f, 0xe7, 0x48, 0x07, 0xb3, 0xce, 0x7c, 0xc4,
	0x9a, 0x92, 0xec, 0xc1, 0x40, 0xe9, 0x58, 0x6a, 0xea, 0xcd, 0x3a, 0xf3, 0xf1, 0xfe, 0x34, 0x74,
	0xf3, 0x86, 0xcd, 0xbc, 0xe1, 0x59, 0x33, 0x2f, 0x73, 0x44, 0xf2, 0x14, 0x7a, 0x58, 0xa4, 0x74,
	0x78, 0x23, 0xdf, 0xd0, 0xc8, 0x01, 0x40, 0x22, 0x31, 0xd6, 0x98, 0x46, 0xb1, 0xa6, 0xa3, 0x1b,
	0x9b, 0xfc, 0x9a, 0x7d, 0xa8, 0x4d, 0x6b, 0x55, 0xa6, 0x4d, 0xab, 0x7f, 0x73, 0x6b, 0xcd, 0x3e,
	0xd4, 0xc1, 0x6b, 0x18, 0xba, 0x3b, 0x55, 0xe4, 0x05, 0x0c, 0x9d, 0x15, 0x8a, 0x76, 0x66, 0xbd,
	0xf9, 0x78, 0x7f, 0x27, 0x6c, 0xf1, 0x29, 0x74, 0x74, 0xd6, 0x70, 0x83, 0x67, 0xe0, 0x31, 0x54,
	0x55, 0xae, 0xc9, 0x23, 0x98, 0x48, 0xf1, 0x59, 0x45, 0xb8, 0x5c, 0x62, 0xa2, 0xd1, 0x19, 0xd4,
	0x67, 0xff, 0x1b, 0xf0, 0x6d, 0x8d, 0x05, 0x27, 0xb0, 0xfd, 0xbe, 0x54, 0x28, 0x75, 0xbd, 0x2d,
	0xc3, 0x4f, 0x15, 0x2a, 0x7d, 0xdb, 0xdd, 0x4f, 0xe0, 0xde, 0x5f, 0x72, 0xaa, 0x14, 0x85, 0x42,
	0x63, 0x64, 0x7d, 0x4a, 0x3b, 0xc6, 0x84, 0x35, 0x25, 0x99, 0xc2, 0x88, 0x17, 0xa6, 0x05, 0x53,
	0x1b, 0x98, 0x09, 0x5b, 0xd7, 0xc1, 0x19, 0xec, 0xbc, 0xc3, 0x46, 0xeb, 0xe8, 0xeb, 0x31, 0xcf,
	0x35, 0xca, 0x2b, 0xd1, 0x5b, 0x0e, 0xf9, 0xbd, 0x0b, 0xbe, 0x93, 0x3a, 0x45, 0x4d, 0xee, 0x42,
	0x8f, 0xa7, 0x4e, 0xc0, 0x67, 0x66, 0x49, 0x76, 0x61, 0xac, 0xf1, 0x8b, 0x8e, 0x14, 0xc6, 0x32,
	0xb9, 0xa8, 0x53, 0x0c, 0x06, 0x3a, 0xb5, 0x08, 0xd9, 0x86, 0x81, 0xc9, 0xb4, 0xa2, 0x3d, 0xdb,
	0xe4, 0x0a, 0x83, 0x9a, 0x54, 0x2b, 0xda, 0x77, 0xa8, 0x2d, 0xae, 0x72, 0x3a, 0xf8, 0xc7, 0x9c,
	0x7a, 0x9b, 0xe5, 0xf4, 0xe5, 0xd5, 0x0b, 0x71, 0xc9, 0x7e, 0xd8, 0x7a, 0x07, 0x47, 0x42, 0xe4,
	0xc7, 0x1c, 0xf3, 0x74, 0xfd, 0x82, 0x82, 0x03, 0xf0, 0xd7, 0xa8, 0x19, 0xfe, 0x32, 0xce, 0x2b,
	0xb4, 0xee, 0x8c, 0x98, 0x2b, 0xc8, 0x7d, 0xf0, 0x78, 0x56, 0x08, 0xe9, 0x9e, 0xf2, 0x88, 0xd5,
	0x55, 0xf0, 0x11, 0xa6, 0xad, 0xbe, 0xb8, 0xec, 0xbc, 0x02, 0x58, 0x5a, 0x24, 0x52, 0xa8, 0xad,
	0xe0, 0x75, 0x53, 0xad, 0x5d, 0x60, 0xfe, 0xb2, 0x59, 0xee, 0xff, 0xec, 0xc0, 0xc4, 0x49, 0x9f,
	0xc4, 0x45, 0x9c, 0xa1, 0x24, 0x17, 0x30, 0xf9, 0x23, 0x55, 0xe4, 0x71, 0xab, 0x5a, 0x5b, 0x90,
	0xa7, 0x4f, 0x36, 0xa1, 0xba, 0x3c, 0x05, 0xff, 0x91, 0x6f, 0xb0, 0xd5, 0x72, 0x30, 0xb2, 0x68,
	0x15, 0xb9, 0xfe, 0x0a, 0xa6, 0x7b, 0x9b, 0x37, 0x34, 0x7b, 0x1f, 0x8d, 0x3e, 0x78, 0x8e, 0x77,
	0xee, 0x59, 0xb3, 0x9f, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xff, 0x59, 0x40, 0xb4, 0x05,
	0x00, 0x00,
}
