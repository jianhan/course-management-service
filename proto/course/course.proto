syntax = "proto3";

package go_micro_srv_course;
option go_package = "course";

import "google/protobuf/timestamp.proto";

service CourseManager {
	// Courses
	rpc UpsertCourses(UpsertCoursesRequest) returns (UpsertResult) {}
	rpc GetCoursesByFilters(GetCoursesByFiltersRequest) returns (GetCoursesByFiltersResponse) {}
	rpc DeleteCoursesByFilters(DeleteCoursesByFiltersRequest) returns (DeleteCoursesByFiltersResponse) {}
	// Categories
	rpc UpsertCategories(UpsertCategoriesRequest) returns (UpsertResult) {}
	// rpc GetCategoriesByFilters(GetCategoriesByFiltersRequest) returns (GetCategoriesByFiltersResponse) {}
	// rpc DeleteCategoriesByIDs(DeleteCategoriesByIDsRequest) returns (DeleteCategoriesByIDsResponse) {}
}

message Course {
	// @inject_tag: bson:"_id,omitempty"
	string id = 1;
	// @inject_tag: validate:"required"
	string name = 2;
	string slug = 3;
	// @inject_tag: bson:"display_order,omitempty"
	uint64 display_order = 4;
	// @inject_tag: validate:"required"
	string description = 5;
	bool visible = 6;
	// @inject_tag: validate:"required"
	google.protobuf.Timestamp start = 7;
	// @inject_tag: validate:"required"
	google.protobuf.Timestamp end = 8;
	// @inject_tag: bson:"created_at"
	google.protobuf.Timestamp created_at = 9;
	// @inject_tag: bson:"updated_at"
	google.protobuf.Timestamp updated_at = 10;
	map<string, string> categories = 11;
}

message Category {
	// @inject_tag: bson:"_id,omitempty"
	string id = 1;
	// @inject_tag: validate:"required"
	string name = 2;
	string slug = 3;
	// @inject_tag: validate:"required"
	string description = 4;
	uint32 display_order = 5;
	bool visible = 6;
	// @inject_tag: bson:"created_at"
	google.protobuf.Timestamp created_at = 7;
	// @inject_tag: bson:"updated_at"
	google.protobuf.Timestamp updated_at = 8;
	map<string, string> courses = 9;
}

message UpsertResult {
	int64 rows_affected = 1;
	int64 updated = 2;
	int64 inserted = 3;
}

message BoolField {
	bool value = 1;
	bool ignore = 2;
}

message UpsertCoursesRequest {
	repeated Course courses = 1;
	bool upsert_categories = 2;
}

message FilterSet {
	repeated string ids = 1;
	string text_search = 2;
	repeated string names = 3;
	repeated string slugs = 4;
	google.protobuf.Timestamp start = 5;
	google.protobuf.Timestamp end = 6;
	BoolField visible = 7;
}

message Pagination {
	uint64 page = 1;
	uint64 per_page  = 2;
}

enum SortDirection {
  ASC = 0;
  DESC = 1;
}

message Sort {
	string field = 1;
	SortDirection direction = 2;
}

message GetCoursesByFiltersRequest {
	FilterSet filter_set = 1;
	Pagination pagination = 8;
	Sort sort = 9;
}

message GetCoursesByFiltersResponse {
	repeated Course courses = 1;
}

message CategoryFilterSet {
	repeated string ids = 1;
	string text_search = 2;
	repeated string names = 3;
	repeated string slugs = 4;
	BoolField visible = 5;
}

message DeleteCoursesByFiltersRequest {
	FilterSet filter_set = 1;
}

message DeleteCoursesByFiltersResponse {
	int64 deleted = 1;
}

message UpsertCategoriesRequest {
  repeated Category categories = 1;
	bool upsert_courses = 2;
}

// message GetCategoriesByFiltersRequest {
// 	CategoryFilterSet filter_set = 1;
// }
//
// message GetCategoriesByFiltersResponse {
// 	repeated Category categories = 1;
// }
//
// message DeleteCategoriesByIDsRequest {
// 	repeated string ids = 1;
// }
//
// message DeleteCategoriesByIDsResponse {
// 	uint32 removed = 1;
// }
