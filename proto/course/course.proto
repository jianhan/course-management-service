syntax = "proto3";

package go_micro_srv_course;
option go_package = "course";

import "google/protobuf/timestamp.proto";

service CourseManager {
	rpc UpsertCourses(UpsertCoursesRequest) returns (UpsertCoursesResponse) {}
	rpc GetCoursesByFilters(GetCoursesByFiltersRequest) returns (GetCoursesByFiltersResponse) {}
	rpc DeleteCoursesByIDs(DeleteCoursesByIDsRequest) returns (DeleteCoursesByIDsResponse) {}
}

message Course {
	// @inject_tag: bson:"_id,omitempty"
	string id = 1;
	// @inject_tag: validate:"required"
	string name = 2;
	string slug = 3;
	// @inject_tag: validate:"required"
	string description = 4;
	bool visible = 5;
	google.protobuf.Timestamp start = 6;
	google.protobuf.Timestamp end = 7;
	// @inject_tag: bson:"created_at"
	google.protobuf.Timestamp created_at = 8;
	// @inject_tag: bson:"updated_at"
	google.protobuf.Timestamp updated_at = 9;
	uint32 order = 10;
	repeated string categories = 11;
}

message Category {
	// @inject_tag: bson:"_id,omitempty"
	string id = 1;
	// @inject_tag: validate:"required"
	string name = 2;
	string slug = 3;
	// @inject_tag: validate:"required"
	string description = 4;
	uint32 order = 5;
	repeated string courses = 6;
}

message Courses {
		repeated Course courses = 1;
}

message Result {
	uint64 rows_effected = 1;
}

message UpsertCoursesRequest {
	repeated Course courses = 1;
}

message UpsertCoursesResponse {
	uint32  updated = 1;
	uint32  inserted = 2;
}

message GetCoursesByFiltersResponse {
	repeated Course courses = 1;
}

message FilterSet {
	repeated string ids = 1;
	string text_search = 2;
	repeated string names = 3;
	repeated string slugs = 4;
	google.protobuf.Timestamp start = 5;
	google.protobuf.Timestamp end = 6;
	BoolField visible = 7;
}

message BoolField {
	bool value = 1;
	bool ignore = 2;
}

message GetCoursesByFiltersRequest {
	FilterSet filter_set = 1;
}

message DeleteCoursesByIDsRequest {
	repeated string ids = 1;
}

message DeleteCoursesByIDsResponse {
	uint32 removed = 1;
}
